name: Create Another EC2 instance from EC2 instance

on:
  workflow_dispatch:
    inputs:
      instancePublicIP:
        description: 'The public ip of instance'  
        required: true
      imageID:
        description: 'The ImageID of EC2 instance'
        required: true
      instanceType:
        description: 'The type of EC2 instance'
        required: true
      region:
        description: 'The Region of EC2 instance'
        required: true
      keyName:
        description: 'The Key Pair of EC2 instance'
        required: true
      vmName:
        description: 'The Name of EC2 instance'
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  greet:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Set up SSH key
      run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -t rsa ${{ github.event.inputs.instancePublicIP}} >> ~/.ssh/known_hosts
    
    - name: SSH into VM
      run: |
          ssh -i ~/.ssh/id_rsa ubuntu@${{ github.event.inputs.instancePublicIP}} ' ls -la'

    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Copy Create Ec2 instance script to VM
      run: |
          scp create_ec2_instance_v1.sh ubuntu@${{ github.event.inputs.instancePublicIP }}:/home/ubuntu
          ssh -i ~/.ssh/id_rsa ubuntu@${{ github.event.inputs.instancePublicIP }} 'ls -la'

    - name: Make the ec2 instance name dynamic
      id: step1
      run: |
          echo "::set-output name=VMName::"${{ github.event.inputs.vmName }}-$(cat /proc/sys/kernel/random/uuid | cut -d '-' -f1)""
    
    - name: Execute the transferred script within VM
      run: |
           ssh -i ~/.ssh/id_rsa ubuntu@${{ github.event.inputs.instancePublicIP }} "bash -s" < create_ec2_instance_v1.sh ${{ github.event.inputs.imageID }} ${{ github.event.inputs.instanceType }} ${{ github.event.inputs.region }} ${{ github.event.inputs.keyName }} ${{ steps.step1.outputs.VMName }}

    - name: Save the Instance info in text file.
      run: |
           mkdir -p artifacts
           ssh -i ~/.ssh/id_rsa ubuntu@${{ github.event.inputs.instancePublicIP }} "cat artifacts/instanceInfo.txt"> artifacts/InstanceInfo.txt

    - name: Upload Instance Info
      uses: actions/upload-artifact@v4
      with:
        name: InstanceInfo
        path: artifacts
        retention-days: 1
